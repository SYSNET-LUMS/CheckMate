The following dummy function is an example and not part of our program.
Now for the following annotated function, approximate the code. The goal is to modify this function to reduce the number of clock cycles it uses. Focus on the identified areas of potential improvement and APPLY the approximation described. Additionally, for any of the Knob Variables identified or create, make sure that they are declared them at the top of the function within the /*Knob Variables Declaration Start*/ /*Knob Variables Declaration End*/ comments. Return the code for the resulting function in the correct format.
If you apply loop perforation then make sure add the knob variable in the condition part of the loop not the itration part; do truncation, not reducing the sampling rate (numberOfValues = numberOfValues * knob1; for{{int i=0;i<numberOfValues; i ++}}). When applying loop perforation approximations, avoid using the multiplication operator repeatedly inside the loops. Instead, pre-compute the multiplication results before the loop starts and use the pre-computed values within the loops.

int dummy(int array[],int array_size) {
    // Calculate the sum of the array
    for (int i = 0; i < array_size; i++) { /* @Approximation possibility [No.1]  [Loop Perforation] */
        sum += array[i];
    }

    printf("Sum: %d\n", sum);
    return sum;
}


Respond in the correct JSON format. 
 The output format should be in JSON 
The output should be formatted as a JSON instance that conforms to the JSON schema below.

As an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}
the object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.

Here is the output schema:
```
{"properties": {"approxmated_code": {"title": "Approxmated Code", "description": "Modifiyed function code with Approximation applied for each of the identified areas. Code should be formated as corrently with '\n' and other spacings.", "type": "string"}, "knob_variables": {"title": "Knob Variables", "description": "List of all the knob variables. If no knob variables then return an empty list [].", "type": "string"}, "knob_ranges": {"title": "Knob Ranges", "description": "List of ranges of each knob variable in knob_variables list. If no knob variables then return an empty list. []", "type": "string"}, "discription": {"title": "Discription", "description": "What changes have beeen made to the code and what would there effect be on the output of the function.", "type": "string"}}, "required": ["approxmated_code", "knob_variables", "knob_ranges", "discription"]}
```